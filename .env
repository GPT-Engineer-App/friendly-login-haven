VITE_SUPABASE_PROJECT_URL=https://fckcskbtwprioigueqmb.supabase.co
VITE_SUPABASE_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZja2Nza2J0d3ByaW9pZ3VlcW1iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjMzODA3MzksImV4cCI6MjAzODk1NjczOX0.Ux8BsOvobEGfzPvSXvBVm2YhzWr1uB9eE3y3Aqt6sbU


-- SQL query to create the hrms_employees table

CREATE TABLE hrms_employees (

    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,

    name VARCHAR(255) NOT NULL,

    email VARCHAR(255) NOT NULL UNIQUE,

    emp_id VARCHAR(50) NOT NULL UNIQUE,

    role employee_role_enum NOT NULL,

    created_dt TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    created_by TEXT,

    last_upd TIMESTAMPTZ,

    last_upd_by TEXT,

    designation VARCHAR(100),

    date_of_joining DATE,

    phone_num VARCHAR(20),

    address TEXT,

    dob DATE,

    emergency_contact VARCHAR(100)

);



-- Create an enum type for employee roles if it doesn't exist

CREATE TYPE employee_role_enum AS ENUM ('admin', 'manager', 'employee', 'hr');



-- Add any necessary indexes

CREATE INDEX idx_hrms_employees_emp_id ON hrms_employees(emp_id);

CREATE INDEX idx_hrms_employees_email ON hrms_employees(email);



-- Set up Row Level Security (RLS)

ALTER TABLE hrms_employees ENABLE ROW LEVEL SECURITY;



-- Create policies for different roles

CREATE POLICY "Admins have full access" ON hrms_employees

    FOR ALL USING (auth.role() = 'admin');



CREATE POLICY "HR can view and edit all employees" ON hrms_employees

    FOR ALL USING (auth.role() = 'hr');



CREATE POLICY "Managers can view all employees but edit only their team" ON hrms_employees

    FOR SELECT USING (auth.role() = 'manager')

    WITH CHECK (auth.role() = 'manager' AND created_by = auth.uid());



CREATE POLICY "Employees can view and edit only their own data" ON hrms_employees

    FOR ALL USING (auth.role() = 'employee' AND emp_id = auth.uid());
